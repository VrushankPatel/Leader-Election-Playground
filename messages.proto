syntax = "proto3";

package lep.transport;

message VoteRequest {
  int32 term = 1;
  int32 candidate_id = 2;
  int32 last_log_index = 3;
  int32 last_log_term = 4;
}

message VoteResponse {
  int32 term = 1;
  bool vote_granted = 2;
}

message AppendEntries {
  int32 term = 1;
  int32 leader_id = 2;
  int32 prev_log_index = 3;
  int32 prev_log_term = 4;
  repeated string entries = 5;
  int32 leader_commit = 6;
}

message Heartbeat {
  int32 term = 1;
  int32 leader_id = 2;
}

message LeaderAnnounce {
  int32 leader_id = 1;
  int32 term = 2;
}

message ControlMessage {
  enum Action {
    START = 0;
    STOP = 1;
    CRASH = 2;
    RESTART = 3;
    PAUSE = 4;
    RESUME = 5;
  }
  Action action = 1;
  int32 node_id = 2;
}

service LeaderElection {
  rpc RequestVote(VoteRequest) returns (VoteResponse);
  rpc AppendEntries(AppendEntries) returns (VoteResponse);  // Reuse VoteResponse for simplicity
  rpc SendHeartbeat(Heartbeat) returns (VoteResponse);
  rpc AnnounceLeader(LeaderAnnounce) returns (VoteResponse);
}